# This is a basic workflow to help you get started with Actions

name: release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
 workflow_dispatch:
 
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
         # npm cache files are stored in `~/.npm` on Linux/macOS
         path: ~/.npm 
         key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn.lock') }}
         restore-keys: |
           ${{ runner.OS }}-node-
           ${{ runner.OS }}-

      - name: Cache node modules
        uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        run: |
          yarn
          npx jetifier

      - name: Cache gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
          
      - name: Cache gradle android
        uses: actions/cache@v2
        with:
          path: android/app/build
          key: ${{ runner.os }}-build-android-${{ hashFiles('**/package.json') }}
          restore-keys: ${{ runner.os }}-build-android
          
      - name: Build
        run: cd android && ./gradlew assembleRelease && cd ../

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          path: android/app/build/outputs/apk/release/app-release.apk
