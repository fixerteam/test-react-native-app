name: release
on:
  push:
    branches:
      - master
jobs:
  jest:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master

      - name: Cache node modules
        uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - run: yarn test

  ios:
    runs-on: macos-latest
    timeout-minutes: 15

    env:
      DEVELOPER_DIR: /Applications/Xcode_11.2.app
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master

      - name: Cache node modules
        uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Rebuild detox
        if: steps.cache.outputs.cache-hit == 'true'
        run: yarn detox-setup

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Cache Pods
        uses: actions/cache@v1
        id: podcache
        with:
          path: ios/Pods
          key: pods-${{ hashFiles('**/Podfile.lock') }}

      - name: Update Pods
        run: |
          gem update cocoapods xcodeproj
          cd ios && pod install && cd ..

      - run: brew tap wix/brew
      - run: brew install applesimutils
      - run: yarn detox build e2e --configuration ios.sim.release
      - run: yarn detox test e2e --configuration ios.sim.release --cleanup

  android:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@master

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache node modules
        uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Run Android Emulator
        run: echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-28;default;x86'

      - run: echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd --force -n test -k 'system-images;android-28;default;x86' --device "Nexus 5X"
      - run: nohup $ANDROID_HOME/emulator/emulator -avd test -skin 768x1280 -no-audio -no-snapshot -no-window &

      - run: $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
      - run: yarn detox build -c android.emu.debug
      - run: yarn start & yarn detox test -H -c android.emu.debug

  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Cache node modules
        uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
